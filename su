#!/data/data/com.termux/files/usr/bin/bash
unset LD_LIBRARY_PATH LD_PRELOAD
PREFIX="/data/data/com.termux/files/usr"PREFIX="/data/data/com.termux/files/usr"
# Try system su binaries first
for p in /debug_ramdisk/su /sbin/su /system/sbin/su /system/bin/su /system/xbin/su /su/bin/su /magisk/.core/bin/su
do
    if [ -x "$p" ]; then
        PATH=/debug_ramdisk:/sbin:/sbin/su:/su/bin:/su/xbin:/system/bin:/system/xbin \
            exec "$p" "$@"
    fi
done

pdl() {
    if [ -z "$1" ]; then
        echo "pdl: Missing distro name argument."
        return 1
    fi
    local DISTRO_NAME_FOR_PDL="$1" 
    shift 

    local HOST_UNAME_S="$(uname -s)"
    local HOST_UNAME_R="$(uname -r)"
    local HOST_UNAME_V="$(uname -v)"
    local HOST_UNAME_M="$(uname -m)"

    local KERNEL_INFO="\\${HOST_UNAME_S}\\${HOSTNAME}\\${HOST_UNAME_R}\\${HOST_UNAME_V}\\${HOST_UNAME_M}\\localdomain\\-1\\"

    local proot_distro_options=("--kernel" "$KERNEL_INFO") 

    local inner_command_args=()
    local after_separator=0

    for arg in "$@"; do # Iterate through pdl's remaining arguments
        if [ "$arg" = "--" ] && [ "$after_separator" -eq 0 ]; then
            after_separator=1
            continue
        fi

        if [ "$after_separator" -eq 0 ]; then
            proot_distro_options+=("$arg")
        else
            inner_command_args+=("$arg")
        fi
    done

    if [ ${#inner_command_args[@]} -gt 0 ]; then
        proot-distro login "${proot_distro_options[@]}" "$DISTRO_NAME_FOR_PDL" -- "${inner_command_args[@]}"
    else
        proot-distro login "${proot_distro_options[@]}" "$DISTRO_NAME_FOR_PDL"
    fi
}

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Usage: su [OPTION]... [-] [USER [ARG]...]"
    echo "Switch user account or become superuser."
    echo
    echo "  -, -l, --login         make the shell a login shell"
    echo "  -c, --command=COMMAND  pass command to the shell with -c"
    echo "  --help                 display this help and exit"
    exit 0
fi

if [ "$(whoami)" = "root" ]; then
    echo "su: already running as root"
    exit 1
fi

VENV_PATH="/root/venv"
SUAUTH_PATH="/etc/suhelp/suauth.py"

auth_user() {
    # $1 = username
    if ! proot-distro login alpine -- sh -c "source $VENV_PATH/bin/activate && python3 $SUAUTH_PATH \"\$1\"" _ "$1"; then
        echo "su: authentication failed"
        exit 1
    fi
}

if [ "$1" = "-c" ] || [ "$1" = "--command" ]; then
    shift
    if [ $# -eq 0 ]; then
        echo "su: option requires an argument -- 'c'"
        echo "usage: su [-] [user [args]]"
        exit 1
    fi

    auth_user "root"
    set -- $*
    cmd="$1"
    shift

    if [ "${cmd#/}" != "$cmd" ] || [ "${cmd#./}" != "$cmd" ] || [ "${cmd#../}" != "$cmd" ]; then
        if [ ! -f "$cmd" ]; then
            echo "su: failed to execute $cmd: No such file or directory"
            exit 1
        fi
        if [ ! -x "$cmd" ]; then
            echo "su: failed to execute $cmd: Permission denied"
            exit 1
        fi
        pdl alpine -- "$cmd" "$@"
        exit $?
    else
        if ! command -v "$cmd" >/dev/null 2>&1; then
            echo "su: failed to execute $cmd: No such file or directory"
            exit 1
        fi
        pdl alpine -- "$cmd" "$@"
        exit $?
    fi
fi

if [ "$1" = "-" ] || [ "$1" = "-l" ] || [ "$1" = "--login" ]; then
    shift
    TARGET_USER="${1:-root}"
    auth_user "$TARGET_USER"

    has_preserve_env=0
    for arg in "$@"; do
        if [ "$arg" = "-p" ] || [ "$arg" = "-m" ]; then
            has_preserve_env=1
            break
        fi
    done

        pdl alpine -- su "$TARGET_USER"
fi

if [[ "$1" == -* ]]; then
    echo "su: invalid option -- '$1'"
    echo "Try 'su --help' for more information."
    exit 1
fi

if [ -n "$1" ]; then
    TARGET_USER="$1"
    auth_user "$TARGET_USER"
    pdl alpine -- su "$@"
    exit $?
fi

auth_user "root"
pdl alpine
exit $?
